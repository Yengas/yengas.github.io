<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture on Yengas</title>
    <link>https://blog.yigitcan.dev/tr/categories/architecture/</link>
    <description>Recent content in Architecture on Yengas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>tr</language>
    <lastBuildDate>Fri, 16 Aug 2019 12:00:00 +0300</lastBuildDate><atom:link href="https://blog.yigitcan.dev/tr/categories/architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bir Satranç Oyunu, Node.JS ile İşlemler Arası İletişim ve İş Dağıtımı</title>
      <link>https://blog.yigitcan.dev/tr/nodejs-cpu-heavy-ipc/</link>
      <pubDate>Fri, 16 Aug 2019 12:00:00 +0300</pubDate>
      
      <guid>https://blog.yigitcan.dev/tr/nodejs-cpu-heavy-ipc/</guid>
      <description>Bu makalenin konusu, Facebook gruplarından birinde karşılaştığım güzel bir sorudan geliyor. Soru hem temel konularda bilgi sahibi olmayı, hem de kullanılacak aracı iyi tanımayı gerektiriyor. Bu konuda fikirlerimi kısa bir cevap olarak yazarsam, haksızlık ederim diye düşündüm. Aynı zamanda bir şeyler öğrenmek ve kod maymunluğu yapmak için eğlenceli bir konu bulmuş oldum. Ortaya bu makale ve github üzerinde yayınladığım örnek kodlar çıktı. Soruya bakarak, esas konumuzu yavaş yavaş işleyelim.
Bir Satranç Oyunu Anlaşıldığı üzere, arkadaş bir satranç oyunu yapıyor ve kullanıcıyı bilgisayara karşı yarıştırmak istiyor.</description>
    </item>
    
  </channel>
</rss>
