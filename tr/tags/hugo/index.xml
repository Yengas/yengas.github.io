<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on Yengas</title>
    <link>https://blog.yigitcan.dev/tr/tags/hugo/</link>
    <description>Recent content in hugo on Yengas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>tr</language>
    <lastBuildDate>Sun, 20 Nov 2016 16:30:00 +0300</lastBuildDate><atom:link href="https://blog.yigitcan.dev/tr/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bu siteyi nasıl yaptım?</title>
      <link>https://blog.yigitcan.dev/tr/personal-website/</link>
      <pubDate>Sun, 20 Nov 2016 16:30:00 +0300</pubDate>
      
      <guid>https://blog.yigitcan.dev/tr/personal-website/</guid>
      <description>Github Actions yayınlandıktan sonra, bu projeyi wercker yerine Github Actions kullanacak şekilde değiştirdim. Blog yazıları ve Hugo konfigürasyonu Yengas/yengas.github.io projesinin source branch&amp;rsquo;inde yer alıyor. Bu branch&amp;rsquo;de yapılan her değişiklikte Github Actions html/css/js dosyalarını oluşturup, aynı projenin master branch&amp;rsquo;ine bu dosyaları gönderiyor.
Web platformunu bırakıp, Android ve daha sonrada diğer platform ve teknolojiler ile ilgilenmeye başladığımdan beri, arayüzden çok, backend sistemler ile uğraşmaya başladım. Bu dönemde tamamladığım çoğu proje; ya tek sayfalık bir arayüze sahipti, yada direk olarak arkaplanda çalışıyordu.</description>
    </item>
    
    <item>
      <title>Statik Website Oluşturucuları nedir? Neden tercih edilir?</title>
      <link>https://blog.yigitcan.dev/tr/static-website-generator/</link>
      <pubDate>Sun, 20 Nov 2016 15:00:00 +0300</pubDate>
      
      <guid>https://blog.yigitcan.dev/tr/static-website-generator/</guid>
      <description>Web&amp;rsquo;in ilk zamanlarında, tamamen statik olarak çalışan websiteleri, daha sonradan kullanıcılar için özelleştirilmiş deneyimler sunmak ve kullanıcı girdisine göre işlem yaparak çıktı verebilmek için dinamik bir hal aldı. Fakat tarayıcılarımız güçlendikce; bir çok şeyi Javascript kullanarak yapabilir hale geldik. Bu durum hem websitelerinin istemci kısmının daha çok yük üstlenebilmesini, hemde bir websitesinin bir masaüstü veya mobil uygulama gibi, uzak sunucusundan tamamen bağımsız çalışabilmesine olanak sağladı.
Tarayıcı ve Sunucularda çalışan sistemlerin birbirinden bağımsız çalışabilmesi ve geliştirilebilmesi; Javascript kullanarak sitemize entegre edebileceğimiz 3.</description>
    </item>
    
  </channel>
</rss>
