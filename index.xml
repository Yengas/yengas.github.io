<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yengas</title>
    <link>https://blog.yigitcan.dev/</link>
    <description>Recent content on Yengas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 03 Aug 2017 16:10:00 +0300</lastBuildDate><atom:link href="https://blog.yigitcan.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KairosDB inner workings; how does it store data in Cassandra?</title>
      <link>https://blog.yigitcan.dev/kairosdb-inner-workings/</link>
      <pubDate>Thu, 03 Aug 2017 16:10:00 +0300</pubDate>
      
      <guid>https://blog.yigitcan.dev/kairosdb-inner-workings/</guid>
      <description>KairosDB is a timeseries database built on Cassandra. Even though it is coded in a way to support different database backends, it is known mostly by its usage of Cassandra as a scaleable and performant time series data storage. With KairosDB, you can store timeseries metric data in different types and then query them with aggregations over time units. In this article, we will look into the details of KairosDB and its two different Cassandra schema to understand how the insert, delete and read operations we do, work under the cover.</description>
    </item>
    
    <item>
      <title>Using Docker and Docker-Compose to setup a local working environment, ready to be scaled.</title>
      <link>https://blog.yigitcan.dev/docker-compose-node/</link>
      <pubDate>Tue, 31 Jan 2017 03:30:00 +0300</pubDate>
      
      <guid>https://blog.yigitcan.dev/docker-compose-node/</guid>
      <description>Let&amp;rsquo;s talk about running your Node.js applications, in a way that makes it easier to migrate to continuous integration and deployment pipelines later on the road. There are too many things that you can do in DevOps layer that will make your code more readable and easier to maintain. For example:
You can assume that every configuration is retrieved through a single file, then make a spec in your Kubernetes cluster to dynamically create this file through ConfigMaps, which would solve your problem of moving/managing configuration files on multiple servers.</description>
    </item>
    
    <item>
      <title>How I Made This Blog?</title>
      <link>https://blog.yigitcan.dev/personal-website/</link>
      <pubDate>Sun, 20 Nov 2016 16:30:00 +0300</pubDate>
      
      <guid>https://blog.yigitcan.dev/personal-website/</guid>
      <description>After the release of Github Actions i refactored this project to work with it instead of wercker. Blog posts and configuration for the Hugo is stored under the source branch of Yengas/yengas.github.io, Github Actions builds and pushes html/css/js files on the master branch of the same repository.
I haven&amp;rsquo;t been designing any GUI&amp;rsquo;s since i switched from Web development to other platforms. Most of the projects i&amp;rsquo;ve worked on for the last few years were either single page designs, or they worked in the background.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://blog.yigitcan.dev/about/</link>
      <pubDate>Sat, 19 Nov 2016 00:00:00 +0300</pubDate>
      
      <guid>https://blog.yigitcan.dev/about/</guid>
      <description>Hello, I&amp;rsquo;m YiÄŸitcan! For over a decade, I&amp;rsquo;ve been involved in software development, working with both corporate and startup companies, developing for different platforms like web, mobile, and desktop. Typescript, NodeJS, Golang, and Java are some of the technologies I frequently use.
Building meaningful products as a team is one of my favorite things to do. Whether it&amp;rsquo;s designing backend architecture, engaging with cloud-native technologies, or experimenting with something new, learning and solving problems together is what motivates me most in the software world.</description>
    </item>
    
  </channel>
</rss>
