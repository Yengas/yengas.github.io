<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>optimization on Yengas</title>
    <link>https://blog.yigitcan.dev/tags/optimization/</link>
    <description>Recent content in optimization on Yengas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 03 Aug 2017 16:10:00 +0300</lastBuildDate><atom:link href="https://blog.yigitcan.dev/tags/optimization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KairosDB inner workings; how does it store data in Cassandra?</title>
      <link>https://blog.yigitcan.dev/kairosdb-inner-workings/</link>
      <pubDate>Thu, 03 Aug 2017 16:10:00 +0300</pubDate>
      
      <guid>https://blog.yigitcan.dev/kairosdb-inner-workings/</guid>
      <description>KairosDB is a timeseries database built on Cassandra. Even though it is coded in a way to support different database backends, it is known mostly by its usage of Cassandra as a scaleable and performant time series data storage. With KairosDB, you can store timeseries metric data in different types and then query them with aggregations over time units. In this article, we will look into the details of KairosDB and its two different Cassandra schema to understand how the insert, delete and read operations we do, work under the cover.</description>
    </item>
    
  </channel>
</rss>
